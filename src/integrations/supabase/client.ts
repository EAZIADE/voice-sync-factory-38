
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://cvfqcvytoobplgracobg.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImN2ZnFjdnl0b29icGxncmFjb2JnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDMwMTY4NjksImV4cCI6MjA1ODU5Mjg2OX0.k6ho8-LWVYgMAbmu2_pViojgJN51FoWdPREqD-p9htw";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Media file utilities
export const getMediaUrl = (projectId: string, type: 'video' | 'audio'): string => {
  const extension = type === 'video' ? 'mp4' : 'mp3';
  return `${SUPABASE_URL}/storage/v1/object/public/podcasts/${projectId}.${extension}`;
};

export const checkMediaFileExists = async (projectId: string, type: 'video' | 'audio'): Promise<boolean> => {
  try {
    const extension = type === 'video' ? 'mp4' : 'mp3';
    const { data } = await supabase
      .storage
      .from('podcasts')
      .getPublicUrl(`${projectId}.${extension}`);
    
    if (!data || !data.publicUrl) {
      console.error(`No public URL found for ${type} file`);
      return false;
    }
    
    // Make a HEAD request to check if the file exists
    const response = await fetch(data.publicUrl, { method: 'HEAD' });
    return response.ok;
  } catch (error) {
    console.error(`Error checking if ${type} file exists:`, error);
    return false;
  }
};
